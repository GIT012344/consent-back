const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function traceContentFlow() {
  try {
    console.log('üîç ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÑ‡∏´‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö...\n');
    
    // STEP 1: ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('STEP 1: ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    console.log('================================\n');
    
    const dbResult = await pool.query(`
      SELECT * FROM policy_versions 
      ORDER BY created_at DESC
    `);
    
    if (dbResult.rows.length === 0) {
      console.log('‚ùå ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡πà‡∏≤‡∏á! ‡πÑ‡∏°‡πà‡∏°‡∏µ policy ‡πÄ‡∏•‡∏¢');
      console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ:');
      console.log('1. ‡πÄ‡∏Ç‡πâ‡∏≤ http://localhost:3003/admin/create-policy');
      console.log('2. ‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡πÉ‡∏´‡∏°‡πà');
      console.log('3. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
      console.log('   - User Type: customer');
      console.log('   - Language: th-TH');
      console.log('   - Title: [‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£]');
      console.log('   - Content: [‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£]');
      console.log('4. ‡∏Å‡∏î Save');
      return;
    }
    
    console.log(`‚úÖ ‡∏û‡∏ö ${dbResult.rows.length} policies\n`);
    dbResult.rows.forEach(p => {
      console.log(`ID: ${p.id}`);
      console.log(`Version: ${p.version}`);
      console.log(`UserType: ${p.user_type}`);
      console.log(`Language: ${p.language}`);
      console.log(`Title: ${p.title}`);
      console.log(`Active: ${p.is_active}`);
      console.log(`Created: ${p.created_at}`);
      console.log(`Content:`);
      console.log('---START---');
      console.log(p.content);
      console.log('---END---\n');
    });
    
    // STEP 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoint /api/simple-policy/active
    console.log('\nSTEP 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API /api/simple-policy/active');
    console.log('================================\n');
    
    for (const policy of dbResult.rows) {
      const url = `http://localhost:3000/api/simple-policy/active?userType=${policy.user_type}&language=${policy.language}`;
      console.log(`Testing: ${url}`);
      
      try {
        const apiRes = await axios.get(url);
        
        if (apiRes.data.success && apiRes.data.data) {
          console.log(`‚úÖ API Response OK`);
          console.log(`   Title: ${apiRes.data.data.title}`);
          
          // ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
          if (apiRes.data.data.content === policy.content) {
            console.log(`   ‚úÖ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
          } else {
            console.log(`   ‚ùå ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á!`);
            console.log(`   DB Content: "${policy.content.substring(0, 50)}..."`);
            console.log(`   API Content: "${apiRes.data.data.content.substring(0, 50)}..."`);
          }
        } else {
          console.log(`‚ùå API ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
        }
      } catch (e) {
        console.log(`‚ùå API Error: ${e.message}`);
      }
      console.log('');
    }
    
    // STEP 3: ‡πÅ‡∏™‡∏î‡∏á URL ‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ
    console.log('\nSTEP 3: URLs ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö');
    console.log('================================\n');
    
    const customerPolicies = dbResult.rows.filter(p => p.user_type === 'customer');
    const otherPolicies = dbResult.rows.filter(p => p.user_type !== 'customer');
    
    if (customerPolicies.length > 0) {
      console.log('Customer Policies:');
      customerPolicies.forEach(p => {
        if (p.language === 'th-TH') {
          console.log(`  - ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢: http://localhost:3003/consent/select-language ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"`);
          console.log(`    ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á: "${p.title}"`);
        } else if (p.language === 'en-US') {
          console.log(`  - English: http://localhost:3003/consent/select-language ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "English"`);
          console.log(`    ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á: "${p.title}"`);
        }
      });
    }
    
    if (otherPolicies.length > 0) {
      console.log('\nOther UserType Policies:');
      otherPolicies.forEach(p => {
        const lang = p.language === 'th-TH' ? 'th' : 'en';
        console.log(`  - ${p.user_type}: http://localhost:3003/consent/${p.user_type}?lang=${lang}`);
        console.log(`    ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á: "${p.title}"`);
      });
    }
    
    // STEP 4: ‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏õ‡∏±‡∏ç‡∏´‡∏≤
    console.log('\n\nSTEP 4: ‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏õ‡∏±‡∏ç‡∏´‡∏≤');
    console.log('================================\n');
    
    console.log('‚ö†Ô∏è ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á:');
    console.log('\n1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Backend:');
    console.log('   - Backend ‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà port 3000');
    console.log('   - ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó: Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß node server.js');
    
    console.log('\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Frontend:');
    console.log('   - Clear Cache: Ctrl+Shift+Delete');
    console.log('   - Hard Refresh: Ctrl+Shift+R');
    
    console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á Policy:');
    console.log('   - ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Backend');
    console.log('   - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ is_active = true');
    
    console.log('\n4. ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ - ‡∏•‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà:');
    console.log('   - ‡∏£‡∏±‡∏ô: node clear-and-guide-creation.js');
    console.log('   - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà: http://localhost:3003/admin/create-policy');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await pool.end();
  }
}

traceContentFlow();
