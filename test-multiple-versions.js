const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function testMultipleVersions() {
  try {
    console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UserType ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô...\n');
    
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    await pool.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤\n');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà
    const policies = [
      // ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ - 2 ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
      {
        version: 'EMP-TH-001',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô 001',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 001</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 001</p>',
        language: 'th-TH',
        user_type: 'employee',
        is_active: true
      },
      {
        version: 'EMP-TH-002',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô 002',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 002</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 002 (‡πÉ‡∏´‡∏°‡πà‡∏Å‡∏ß‡πà‡∏≤)</p>',
        language: 'th-TH',
        user_type: 'employee',
        is_active: false
      },
      // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ - 1 ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
      {
        version: 'CUST-TH-001',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>',
        language: 'th-TH',
        user_type: 'customer',
        is_active: true
      },
      // ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© - 1 ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô
      {
        version: 'CUST-EN-001',
        title: 'Customer Policy',
        content: '<h2>Customer Policy</h2><p>Customer content</p>',
        language: 'en-US',
        user_type: 'customer',
        is_active: true
      }
    ];
    
    for (const policy of policies) {
      const result = await pool.query(
        `INSERT INTO policy_versions 
         (version, title, content, language, user_type, is_active, created_at) 
         VALUES ($1, $2, $3, $4, $5, $6, NOW())
         RETURNING id`,
        [policy.version, policy.title, policy.content, policy.language, policy.user_type, policy.is_active]
      );
      const status = policy.is_active ? '‚úÖ ACTIVE' : '‚è∏Ô∏è INACTIVE';
      console.log(`‡∏™‡∏£‡πâ‡∏≤‡∏á [${result.rows[0].id}]: ${policy.version} - ${policy.title} ${status}`);
    }
    
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ:');
    const all = await pool.query('SELECT * FROM policy_versions ORDER BY user_type, language, version');
    
    console.log('\nID | Version      | UserType | Language | Active | Title');
    console.log('---|--------------|----------|----------|--------|------');
    all.rows.forEach(p => {
      const active = p.is_active ? 'YES' : 'NO';
      console.log(`${p.id.toString().padEnd(2)} | ${p.version.padEnd(12)} | ${p.user_type.padEnd(8)} | ${p.language.padEnd(8)} | ${active.padEnd(6)} | ${p.title}`);
    });
    
    console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\nüìå ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
    console.log('1. ‡∏´‡∏ô‡πâ‡∏≤ Policy Management ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏∏‡∏Å‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô');
    console.log('2. ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ toggle active/inactive ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô');
    console.log('3. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà active ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ userType/language');
    console.log('4. ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å 001 ‡πÄ‡∏õ‡πá‡∏ô 002:');
    console.log('   - ‡∏õ‡∏¥‡∏î 001 (inactive)');
    console.log('   - ‡πÄ‡∏õ‡∏¥‡∏î 002 (active)');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await pool.end();
  }
}

testMultipleVersions();
