const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function traceAdminContent() {
  const client = await pool.connect();
  
  try {
    console.log('üîç ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà Admin ‡∏™‡∏£‡πâ‡∏≤‡∏á\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('1Ô∏è‚É£ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n');
    const latest = await client.query(`
      SELECT id, user_type, language, title, content
      FROM policy_versions
      WHERE is_active = true
      ORDER BY updated_at DESC, created_at DESC
      LIMIT 5
    `);
    
    latest.rows.forEach(p => {
      console.log(`üìÑ ${p.title} (${p.user_type}/${p.language}) - ID: ${p.id}`);
      console.log('‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:');
      console.log(p.content);
      console.log('-'.repeat(60) + '\n');
    });
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoint
    console.log('2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Endpoint:\n');
    
    const tests = [
      { userType: 'customer', language: 'th', desc: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ó‡∏¢' },
      { userType: 'customer', language: 'en', desc: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©' },
      { userType: 'employee', language: 'th', desc: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢' }
    ];
    
    for (const test of tests) {
      const url = `http://localhost:3000/api/simple-policy/active?userType=${test.userType}&language=${test.language}`;
      console.log(`Testing: ${test.desc}`);
      console.log(`URL: ${url}`);
      
      try {
        const res = await axios.get(url);
        if (res.data.success && res.data.data) {
          console.log(`‚úÖ Title: "${res.data.data.title}"`);
          console.log(`   Content: ${res.data.data.content?.substring(0, 100)}...`);
        } else {
          console.log(`‚ùå No data returned`);
        }
      } catch (err) {
        console.log(`‚ùå Error: ${err.message}`);
      }
      console.log('');
    }
    
    // 3. ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    console.log('='.repeat(80));
    console.log('\n‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Admin ‡∏™‡∏£‡πâ‡∏≤‡∏á:\n');
    console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:5000/admin/create-policy');
    console.log('2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà:');
    console.log('   - Title: ‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡πÄ‡∏ä‡πà‡∏ô 001, 002, 003)');
    console.log('   - User Type: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å customer/employee/partner');
    console.log('   - Language: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å th ‡∏´‡∏£‡∏∑‡∏≠ en');
    console.log('   - Content: ‡πÉ‡∏™‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£');
    console.log('3. ‡∏Å‡∏î Save');
    console.log('4. ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤ title ‡∏ã‡πâ‡∏≥');
    console.log('5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà http://localhost:5000/consent/[userType]?lang=[language]');
    console.log('\n‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ñ‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á title ‡∏ã‡πâ‡∏≥ ‡∏à‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÄ‡∏î‡∏¥‡∏°');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

traceAdminContent();
