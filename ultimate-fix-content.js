const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function ultimateFixContent() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ - ‡πÉ‡∏´‡πâ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Admin ‡∏û‡∏¥‡∏°‡∏û‡πå\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏•‡∏ö policies ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log('1. RESET ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà:\n');
    
    // ‡∏•‡∏ö customer/th ‡πÄ‡∏Å‡πà‡∏≤
    await client.query(`
      DELETE FROM policy_versions 
      WHERE user_type = 'customer' AND language = 'th'
    `);
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
    const testContent = `<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß - TEST ${new Date().toLocaleTimeString('th-TH')}</h1>
<p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà Admin ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Create Policy</p>
<h2>‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
<ul>
  <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</li>
  <li>‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ú‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</li>
  <li>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤</li>
</ul>
<p><strong>‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</strong> ${new Date().toLocaleString('th-TH')}</p>`;
    
    const result = await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active, created_at, updated_at
      ) VALUES (
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
        'customer',
        'th',
        '1.0.0',
        $1,
        true,
        NOW(),
        NOW()
      ) RETURNING id
    `, [testContent]);
    
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ID ${result.rows[0].id}`);
    console.log('\n‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:');
    console.log('-'.repeat(60));
    console.log(testContent);
    console.log('-'.repeat(60));
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    console.log('\n2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:\n');
    
    try {
      const apiTest = await axios.get(
        'http://localhost:3000/api/simple-policy/active?userType=customer&language=th'
      );
      
      if (apiTest.data.success && apiTest.data.data) {
        console.log('‚úÖ API Response OK');
        console.log(`Title: "${apiTest.data.data.title}"`);
        console.log(`Content matches: ${apiTest.data.data.content === testContent ? '‚úÖ YES' : '‚ùå NO'}`);
      } else {
        console.log('‚ùå API ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      }
    } catch (err) {
      console.log('‚ùå API Error - Backend ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
    }
    
    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á policies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏î‡πâ‡∏ß‡∏¢
    console.log('\n3. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ:\n');
    
    // Customer English
    await client.query(`
      DELETE FROM policy_versions 
      WHERE user_type = 'customer' AND language = 'en'
    `);
    
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active
      ) VALUES (
        'Privacy Policy',
        'customer',
        'en',
        '1.0.0',
        '<h1>Privacy Policy - TEST</h1><p>This is content created by Admin</p>',
        true
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á customer/en');
    
    // Employee Thai
    await client.query(`
      DELETE FROM policy_versions 
      WHERE user_type = 'employee' AND language = 'th'
    `);
    
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active
      ) VALUES (
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        'employee',
        'th',
        '1.0.0',
        '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p>',
        true
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á employee/th');
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!\n');
    console.log('üìã Policies ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ:');
    
    const final = await client.query(`
      SELECT user_type, language, title
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    final.rows.forEach(p => {
      console.log(`‚Ä¢ ${p.user_type}/${p.language}: "${p.title}"`);
    });
    
    console.log('\nüîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: http://localhost:5000/consent/customer?lang=th');
    console.log('2. ‡∏Å‡∏î F12 ‡∏î‡∏π Console');
    console.log('3. ‡∏î‡∏π‡∏ß‡πà‡∏≤‡∏°‡∏µ log "Policy data from API:" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
    console.log('4. ‡∏Å‡∏î Ctrl+F5 ‡πÄ‡∏û‡∏∑‡πà‡∏≠ refresh');
    console.log('\n‚ö†Ô∏è ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà:');
    console.log('- Restart backend: Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß npm run dev');
    console.log('- Clear localStorage: F12 ‚Üí Application ‚Üí Clear Storage');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

ultimateFixContent();
