const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function finalCompleteFixAll() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log('1. RESET ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà:\n');
    
    await client.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const result = await client.query(`
      INSERT INTO policy_versions (
        title,
        user_type,
        language,
        version,
        content,
        is_active,
        created_at,
        updated_at
      ) VALUES (
        '001',
        'customer',
        'th',
        '1.0.0',
        '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h1>
<p>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏≤‡∏°</p>
<p>‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏≤‡∏ú‡∏≤</p>
<p>‡∏≠‡∏≥‡∏û‡∏•‡∏™‡∏ô‡∏∏‡∏¢‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≠‡∏°‡∏û‡πÉ‡∏à</p>',
        true,
        NOW(),
        NOW()
      ) RETURNING *
    `);
    
    const policy = result.rows[0];
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ID: ${policy.id}`);
    console.log(`   Title: ${policy.title}`);
    console.log(`   User Type: ${policy.user_type}`);
    console.log(`   Language: ${policy.language}`);
    console.log(`   Active: ${policy.is_active}`);
    
    // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á policies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active
      ) VALUES 
      ('002', 'customer', 'en', '1.0.0', '<h1>Privacy Policy</h1><p>English content</p>', true),
      ('003', 'employee', 'th', '1.0.0', '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p>', true)
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á policies ‡∏≠‡∏∑‡πà‡∏ô‡πÜ');
    
    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:\n');
    
    const check = await client.query(`
      SELECT user_type, language, title
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    console.log('Policies ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ:');
    check.rows.forEach(p => {
      console.log(`‚Ä¢ ${p.user_type}/${p.language}: "${p.title}"`);
    });
    
    // 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    console.log('\n3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:\n');
    
    try {
      const apiRes = await axios.get('http://localhost:3000/api/simple-policy/active?userType=customer&language=th');
      if (apiRes.data.success && apiRes.data.data) {
        console.log('‚úÖ API ‡∏û‡∏ö Policy');
        console.log(`   Title: ${apiRes.data.data.title}`);
        console.log(`   Content: ${apiRes.data.data.content?.substring(0, 50)}...`);
      } else {
        console.log('‚ùå API ‡πÑ‡∏°‡πà‡∏û‡∏ö Policy');
        console.log(`   Message: ${apiRes.data.message}`);
      }
    } catch (err) {
      console.log('‚ö†Ô∏è API Error - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ backend ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà');
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!\n');
    console.log('‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('1. http://localhost:5000/consent/customer?lang=th ‚Üí ‡πÅ‡∏™‡∏î‡∏á 001');
    console.log('2. http://localhost:5000/consent/customer?lang=en ‚Üí ‡πÅ‡∏™‡∏î‡∏á 002');
    console.log('3. http://localhost:5000/consent/employee?lang=th ‚Üí ‡πÅ‡∏™‡∏î‡∏á 003');
    console.log('\n‡∏Å‡∏î Ctrl+F5 ‡πÄ‡∏û‡∏∑‡πà‡∏≠ refresh ‡∏´‡∏ô‡πâ‡∏≤');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

finalCompleteFixAll();
