const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function setupTestPolicies() {
  try {
    console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà...\n');
    
    // 1. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    await pool.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤\n');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà
    const policies = [
      {
        version: 'v1.0-customer-th',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢',
        content: '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h1><p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</p><p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ' + new Date().toLocaleString('th-TH') + '</p>',
        language: 'th-TH',
        user_type: 'customer'
      },
      {
        version: 'v1.0-customer-en',
        title: 'Customer Policy English',
        content: '<h1>Policy for Customers</h1><p>This is the content you created for customers in English</p><p>Created: ' + new Date().toLocaleString('en-US') + '</p>',
        language: 'en-US',
        user_type: 'customer'
      },
      {
        version: 'v1.0-employee-th',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        content: '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1><p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p><p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ' + new Date().toLocaleString('th-TH') + '</p>',
        language: 'th-TH',
        user_type: 'employee'
      },
      {
        version: 'v1.0-partner-th',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£',
        content: '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</h1><p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</p><p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ' + new Date().toLocaleString('th-TH') + '</p>',
        language: 'th-TH',
        user_type: 'partner'
      }
    ];
    
    for (const policy of policies) {
      await pool.query(
        `INSERT INTO policy_versions 
         (version, title, content, language, user_type, is_active, created_at) 
         VALUES ($1, $2, $3, $4, $5, true, NOW())`,
        [policy.version, policy.title, policy.content, policy.language, policy.user_type]
      );
      console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á: ${policy.title}`);
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
    console.log('\nüìä Policies ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:\n');
    const check = await pool.query('SELECT * FROM policy_versions ORDER BY version');
    
    check.rows.forEach(p => {
      console.log(`[${p.version}] ${p.user_type} - ${p.language}`);
      console.log(`Title: ${p.title}`);
      console.log(`Content: ${p.content}`);
      console.log('---\n');
    });
    
    console.log('‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!\n');
    console.log('‚ö†Ô∏è ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Backend: Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß node server.js');
    console.log('\nüìå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('Customer Thai: http://localhost:3003/consent/select-language ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢"');
    console.log('Customer English: http://localhost:3003/consent/select-language ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "English"');
    console.log('Employee: http://localhost:3003/consent/employee?lang=th');
    console.log('Partner: http://localhost:3003/consent/partner?lang=th');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

setupTestPolicies();
