const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function createPolicyFromAdmin() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà Admin ‡∏Å‡∏£‡∏≠‡∏Å\n');
    console.log('='.repeat(80));
    
    // ‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡πà‡∏á‡∏°‡∏≤:
    // - ‡∏†‡∏≤‡∏©‡∏≤: ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    // - User Type: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    // - Title: 001
    // - Content: ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏≤‡∏°...
    
    const adminContent = `‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏´‡∏≤‡∏°
‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏≠‡∏≤‡∏ú‡∏≤
‡∏≠‡∏≥‡∏û‡∏•‡∏™‡∏ô‡∏∏‡∏¢‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≠‡∏°‡∏û‡πÉ‡∏à`;
    
    // 1. ‡∏•‡∏ö policy ‡πÄ‡∏Å‡πà‡∏≤
    console.log('1. ‡∏•‡∏ö Policy ‡πÄ‡∏Å‡πà‡∏≤:\n');
    await client.query(`
      DELETE FROM policy_versions 
      WHERE user_type = 'customer' AND language = 'th'
    `);
    console.log('‚úÖ ‡∏•‡∏ö policy ‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà Admin ‡∏Å‡∏£‡∏≠‡∏Å
    console.log('\n2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà:\n');
    const result = await client.query(`
      INSERT INTO policy_versions (
        title, 
        user_type, 
        language, 
        version, 
        content, 
        is_active,
        created_at,
        updated_at
      ) VALUES (
        '001',
        'customer',
        'th',
        '1.0.0',
        $1,
        true,
        NOW(),
        NOW()
      ) RETURNING id
    `, [adminContent]);
    
    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ID ${result.rows[0].id}`);
    console.log('\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Policy:');
    console.log('- Title: 001');
    console.log('- User Type: customer');
    console.log('- Language: th');
    console.log('- Content:');
    console.log('-'.repeat(60));
    console.log(adminContent);
    console.log('-'.repeat(60));
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n');
    const check = await client.query(`
      SELECT id, title, user_type, language, content
      FROM policy_versions
      WHERE user_type = 'customer' AND language = 'th' AND is_active = true
    `);
    
    if (check.rows.length > 0) {
      console.log('‚úÖ ‡∏û‡∏ö Policy ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      console.log(`ID: ${check.rows[0].id}`);
      console.log(`Title: ${check.rows[0].title}`);
    } else {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Policy');
    }
    
    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    console.log('\n4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:\n');
    try {
      const apiTest = await axios.get(
        'http://localhost:3000/api/simple-policy/active?userType=customer&language=th'
      );
      
      if (apiTest.data.success && apiTest.data.data) {
        console.log('‚úÖ API Response:');
        console.log(`Title: "${apiTest.data.data.title}"`);
        console.log(`Content: ${apiTest.data.data.content}`);
      } else {
        console.log('‚ùå API ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
      }
    } catch (err) {
      console.log('‚ùå API Error - Backend ‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
      console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏±‡∏ô: npm run dev ‡πÉ‡∏ô consent-back folder');
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!\n');
    console.log('‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏µ‡πà: http://localhost:5000/consent/customer?lang=th');
    console.log('\n‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô:');
    console.log('1. ‡∏Å‡∏î Ctrl+F5 ‡πÄ‡∏û‡∏∑‡πà‡∏≠ refresh');
    console.log('2. Restart backend: Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß npm run dev');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

createPolicyFromAdmin();
