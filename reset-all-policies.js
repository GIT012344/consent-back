const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function resetAllPolicies() {
  try {
    console.log('üîß RESET ‡∏£‡∏∞‡∏ö‡∏ö Policies ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î...\n');
    
    // 1. Drop ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    await pool.query('DROP TABLE IF EXISTS policy_versions CASCADE');
    await pool.query(`
      CREATE TABLE policy_versions (
        id SERIAL PRIMARY KEY,
        version VARCHAR(50),
        title VARCHAR(255),
        content TEXT,
        language VARCHAR(10),
        user_type VARCHAR(50),
        effective_date TIMESTAMP,
        expiry_date TIMESTAMP,
        is_active BOOLEAN DEFAULT true,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies
    const policies = [
      // Customer - Thai
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</p>',
        language: 'th-TH',
        user_type: 'customer'
      },
      // Customer - English
      {
        version: '1.0.0',
        title: 'Customer Policy (English)',
        content: '<h2>Privacy Policy</h2><p>English content for customers</p>',
        language: 'en-US',
        user_type: 'customer'
      },
      // Employee
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p>',
        language: 'th-TH',
        user_type: 'employee'
      },
      // Partner
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</p>',
        language: 'th-TH',
        user_type: 'partner'
      },
      // Vendor
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢</p>',
        language: 'th-TH',
        user_type: 'vendor'
      }
    ];
    
    console.log('üìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies:');
    for (const policy of policies) {
      const result = await pool.query(
        `INSERT INTO policy_versions 
         (version, title, content, language, user_type, is_active, effective_date) 
         VALUES ($1, $2, $3, $4, $5, true, NOW())
         RETURNING *`,
        [policy.version, policy.title, policy.content, policy.language, policy.user_type]
      );
      const p = result.rows[0];
      console.log(`‚úÖ [${p.id}] ${p.user_type} - ${p.language}: "${p.title}"`);
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\nüìä Policies ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:');
    const check = await pool.query('SELECT * FROM policy_versions ORDER BY id');
    
    console.table(check.rows.map(p => ({
      ID: p.id,
      UserType: p.user_type,
      Language: p.language,
      Title: p.title,
      Active: p.is_active
    })));
    
    console.log('\n‚úÖ RESET ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!');
    console.log('\n‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤:');
    console.log('1. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Backend (Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß node server.js)');
    console.log('2. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤ Policy Management');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

resetAllPolicies();
