const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function verifyContentSystem() {
  const client = await pool.connect();
  
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏î‡∏π‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('üìä ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n');
    const policies = await client.query(`
      SELECT id, user_type, language, title, content
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    if (policies.rows.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö policy ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!');
      console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
      console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:5000/admin/create-policy');
      console.log('2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà');
      console.log('3. ‡∏Å‡∏£‡∏≠‡∏Å Title, User Type, Language ‡πÅ‡∏•‡∏∞ Content');
      console.log('4. ‡∏Å‡∏î Save');
      return;
    }
    
    policies.rows.forEach(p => {
      console.log(`ID ${p.id}: ${p.user_type}/${p.language}`);
      console.log(`Title: "${p.title}"`);
      console.log(`Content:`);
      console.log('-'.repeat(60));
      console.log(p.content);
      console.log('-'.repeat(60));
      console.log('');
    });
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    console.log('üîå ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API:\n');
    
    const tests = [
      { userType: 'customer', language: 'th', desc: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ó‡∏¢' },
      { userType: 'customer', language: 'en', desc: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©' },
      { userType: 'employee', language: 'th', desc: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢' }
    ];
    
    for (const test of tests) {
      try {
        const res = await axios.get(
          `http://localhost:3000/api/simple-policy/active?userType=${test.userType}&language=${test.language}`
        );
        
        if (res.data.success && res.data.data) {
          console.log(`‚úÖ ${test.desc}:`);
          console.log(`   Title: "${res.data.data.title}"`);
          console.log(`   Content: ${res.data.data.content?.substring(0, 100)}...`);
        } else {
          console.log(`‚ùå ${test.desc}: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
        }
      } catch (err) {
        console.log(`‚ùå ${test.desc}: Backend ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô`);
      }
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:\n');
    console.log('1. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy:');
    console.log('   - ‡πÑ‡∏õ‡∏ó‡∏µ‡πà http://localhost:5000/admin/create-policy');
    console.log('   - ‡∏Å‡∏£‡∏≠‡∏Å Title, User Type, Language');
    console.log('   - ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ô Content');
    console.log('   - ‡∏Å‡∏î Save');
    console.log('\n2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('   - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ó‡∏¢: http://localhost:5000/consent/customer?lang=th');
    console.log('   - ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©: http://localhost:5000/consent/customer?lang=en');
    console.log('   - ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢: http://localhost:5000/consent/employee?lang=th');
    console.log('\n3. ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà Admin ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏ß‡πâ');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

verifyContentSystem();
