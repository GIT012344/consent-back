const axios = require('axios');

async function testApiResponse() {
  try {
    console.log('üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Response\n');
    console.log('='.repeat(80));
    
    // Call the API
    const response = await axios.get('http://localhost:3000/api/consent/records');
    
    console.log('1. API Response Status:', response.status);
    console.log('\n2. Response Data Structure:');
    console.log('   - success:', response.data.success);
    console.log('   - has data?:', !!response.data.data);
    console.log('   - has records?:', !!response.data.records);
    
    // Get the actual records
    const records = response.data.data || response.data.records || [];
    
    console.log(`\n3. ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Records: ${records.length}\n`);
    
    if (records.length > 0) {
      console.log('4. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Record ‡πÅ‡∏£‡∏Å:');
      const firstRecord = records[0];
      console.log(JSON.stringify(firstRecord, null, 2));
      
      console.log('\n5. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Fields:');
      console.log('   - id:', firstRecord.id);
      console.log('   - name_surname:', firstRecord.name_surname);
      console.log('   - user_type:', firstRecord.user_type);
      console.log('   - policy_title:', firstRecord.policy_title);
      console.log('   - consent_language:', firstRecord.consent_language);
      
      console.log('\n6. Records ‡∏ó‡∏µ‡πà‡∏°‡∏µ policy_title:');
      records.forEach(r => {
        if (r.policy_title && r.policy_title !== 'null' && r.policy_title !== 'N/A') {
          console.log(`   ID ${r.id}: ${r.name_surname} ‚Üí "${r.policy_title}"`);
        }
      });
      
      console.log('\n7. Records ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ policy_title:');
      records.forEach(r => {
        if (!r.policy_title || r.policy_title === 'null' || r.policy_title === 'N/A') {
          console.log(`   ID ${r.id}: ${r.name_surname} ‚Üí "${r.policy_title || 'undefined'}"`);
        }
      });
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ:');
    console.log('API ‡∏™‡πà‡∏á policy_title ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?');
    if (records.length > 0 && records[0].policy_title !== undefined) {
      console.log('‚úÖ API ‡∏™‡πà‡∏á policy_title ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤');
      console.log('‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏≤‡∏à‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà Frontend mapping');
    } else {
      console.log('‚ùå API ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á policy_title ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤');
      console.log('‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà Backend API');
    }
    
  } catch (error) {
    console.error('‚ùå Error calling API:', error.message);
    console.log('\n‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤:');
    console.log('1. Backend server ‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà port 3000');
    console.log('2. Database connection ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥');
  }
}

testApiResponse();
