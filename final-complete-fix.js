const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function finalCompleteFix() {
  const client = await pool.connect();
  
  try {
    console.log('üîß FINAL FIX - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏•‡∏ö policies ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    console.log('1. RESET ‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n');
    
    // ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    await client.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á policies ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    console.log('\n2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á\n');
    
    // Customer Thai
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active, created_at, updated_at
      ) VALUES (
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ TH',
        'customer',
        'th',
        '1.0',
        '<h1>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h1>
<p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ Admin</p>
<h2>1. ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
<p>‡πÄ‡∏£‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</p>
<h2>2. ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>
<p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</p>',
        true,
        NOW(),
        NOW()
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ó‡∏¢');
    
    // Customer English
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active, created_at, updated_at
      ) VALUES (
        'Customer Policy EN',
        'customer',
        'en',
        '1.0',
        '<h1>Privacy Policy for Customers</h1>
<p>This is content for English customers created by Admin</p>
<h2>1. Data Collection</h2>
<p>We collect your data securely</p>
<h2>2. Data Usage</h2>
<p>Data is used to improve our services</p>',
        true,
        NOW(),
        NOW()
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©');
    
    // Employee Thai
    await client.query(`
      INSERT INTO policy_versions (
        title, user_type, language, version, content, is_active, created_at, updated_at
      ) VALUES (
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        'employee',
        'th',
        '1.0',
        '<h1>‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h1>
<p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</p>
<h2>1. ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö</h2>
<p>‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</p>',
        true,
        NOW(),
        NOW()
      )
    `);
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢');
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å\n');
    const saved = await client.query(`
      SELECT id, user_type, language, title, 
             LEFT(content, 100) as content_preview
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    saved.rows.forEach(p => {
      console.log(`‚úÖ ${p.user_type}/${p.language}: "${p.title}"`);
      console.log(`   ID: ${p.id}`);
      console.log(`   Content: ${p.content_preview}...`);
      console.log('');
    });
    
    // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    console.log('4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API\n');
    
    const tests = [
      { userType: 'customer', language: 'th' },
      { userType: 'customer', language: 'en' },
      { userType: 'employee', language: 'th' }
    ];
    
    for (const test of tests) {
      try {
        const res = await axios.get(
          `http://localhost:3000/api/simple-policy/active?userType=${test.userType}&language=${test.language}`
        );
        
        if (res.data.success && res.data.data) {
          console.log(`‚úÖ ${test.userType}/${test.language}: "${res.data.data.title}"`);
        } else {
          console.log(`‚ùå ${test.userType}/${test.language}: No data`);
        }
      } catch (err) {
        console.log(`‚ùå ${test.userType}/${test.language}: ${err.message}`);
      }
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!\n');
    
    console.log('üìù ‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡∏£‡πâ‡∏≤‡∏á Policy ‡πÉ‡∏´‡∏°‡πà:');
    console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: http://localhost:5000/admin/create-policy');
    console.log('2. ‡∏Å‡∏£‡∏≠‡∏Å:');
    console.log('   - Title: ‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£');
    console.log('   - User Type: customer/employee/partner');
    console.log('   - Language: th-TH ‡∏´‡∏£‡∏∑‡∏≠ en-US');
    console.log('   - Content: ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£');
    console.log('3. ‡∏Å‡∏î Save');
    console.log('\n‚ö†Ô∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ñ‡πâ‡∏≤ title ‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡∏à‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ö');
    
    console.log('\nüîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('‚Ä¢ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÑ‡∏ó‡∏¢: http://localhost:5000/consent/customer?lang=th');
    console.log('‚Ä¢ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©: http://localhost:5000/consent/customer?lang=en');
    console.log('‚Ä¢ ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÑ‡∏ó‡∏¢: http://localhost:5000/consent/employee?lang=th');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

finalCompleteFix();
