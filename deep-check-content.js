const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function deepCheckContent() {
  const client = await pool.connect();
  
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('1Ô∏è‚É£ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:\n');
    const dbContent = await client.query(`
      SELECT id, user_type, language, title, content
      FROM policy_versions
      WHERE is_active = true
      ORDER BY id
    `);
    
    dbContent.rows.forEach(p => {
      console.log(`üìÑ Policy: ${p.title} (${p.user_type}/${p.language})`);
      console.log(`   ID: ${p.id}`);
      console.log(`   ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:`);
      console.log(`   ${p.content}\n`);
    });
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API endpoints
    console.log('='.repeat(80));
    console.log('\n2Ô∏è‚É£ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Endpoints:\n');
    
    const tests = [
      { url: 'http://localhost:3000/api/simple-policy/active?userType=customer&language=th', desc: 'Customer Thai' },
      { url: 'http://localhost:3000/api/simple-policy/active?userType=customer&language=en', desc: 'Customer English' },
      { url: 'http://localhost:3000/api/simple-policy/active?userType=employee&language=th', desc: 'Employee Thai' }
    ];
    
    for (const test of tests) {
      try {
        const response = await axios.get(test.url);
        if (response.data.success && response.data.data) {
          console.log(`‚úÖ ${test.desc}:`);
          console.log(`   Title: "${response.data.data.title}"`);
          console.log(`   Content: ${response.data.data.content?.substring(0, 100)}...`);
        } else {
          console.log(`‚ùå ${test.desc}: No data returned`);
        }
      } catch (err) {
        console.log(`‚ùå ${test.desc}: ${err.message}`);
      }
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Frontend API call
    console.log('\n='.repeat(80));
    console.log('\n3Ô∏è‚É£ Frontend API Configuration:\n');
    console.log('Frontend ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏î‡∏±‡∏á‡∏ô‡∏µ‡πâ:');
    console.log('- Base URL: http://localhost:3000');
    console.log('- Endpoint: /api/simple-policy/active');
    console.log('- Parameters: userType=customer&language=th (‡∏´‡∏£‡∏∑‡∏≠ en)');
    
    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏†‡∏≤‡∏©‡∏≤
    console.log('\n='.repeat(80));
    console.log('\n4Ô∏è‚É£ ‡∏Å‡∏≤‡∏£‡πÅ‡∏°‡∏û‡∏†‡∏≤‡∏©‡∏≤:\n');
    const mapping = await client.query(`
      SELECT user_type, language, title, 
             CASE 
               WHEN language = 'th' THEN '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢'
               WHEN language = 'en' THEN 'English'
               ELSE language
             END as lang_display
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    mapping.rows.forEach(m => {
      console.log(`${m.user_type}/${m.language} (${m.lang_display}) ‚Üí "${m.title}"`);
    });
    
    // 5. ‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î
    console.log('\n='.repeat(80));
    console.log('\n‚ö†Ô∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î:\n');
    console.log('1. ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ñ‡∏π‡∏Å override ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô');
    console.log('2. Frontend cache ‡πÄ‡∏Å‡πà‡∏≤ - ‡∏•‡∏≠‡∏á Hard Refresh (Ctrl+F5)');
    console.log('3. Backend ‡πÑ‡∏°‡πà restart - ‡∏•‡∏≠‡∏á restart server');
    console.log('4. Language mapping ‡∏ú‡∏¥‡∏î');
    
    console.log('\n='.repeat(80));
    console.log('\n‚úÖ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:\n');
    console.log('1. Restart backend: taskkill /F /IM node.exe ‡πÅ‡∏•‡πâ‡∏ß node server.js');
    console.log('2. Clear browser cache: Ctrl+F5');
    console.log('3. ‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡πÉ‡∏´‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô: http://localhost:5000/admin/create-policy');
    console.log('4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö console ‡πÉ‡∏ô browser ‡∏ß‡πà‡∏≤‡∏°‡∏µ error ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

deepCheckContent();
