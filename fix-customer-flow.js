const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function fixCustomerFlow() {
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Customer Flow ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á...\n');
    
    // 1. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    await pool.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    console.log('\nüìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡πÉ‡∏´‡∏°‡πà:');
    
    // Customer Thai - ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
    const customerThaiResult = await pool.query(
      `INSERT INTO policy_versions 
       (version, title, content, language, user_type, is_active, effective_date) 
       VALUES ($1, $2, $3, $4, $5, true, NOW())
       RETURNING id`,
      [
        '1.0.0',
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)',
        `<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2>
<p>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤</p>
<p>&nbsp;</p>
<p>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°:</p>
<ul>
<li>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</li>
<li>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô/‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï</li>
<li>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</li>
<li>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</li>
<li>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</li>
</ul>
<p>&nbsp;</p>
<p>‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</p>`,
        'th-TH',
        'customer'
      ]
    );
    console.log(`‚úÖ Customer Thai - ID: ${customerThaiResult.rows[0].id}`);
    
    // Customer English - ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
    const customerEnResult = await pool.query(
      `INSERT INTO policy_versions 
       (version, title, content, language, user_type, is_active, effective_date) 
       VALUES ($1, $2, $3, $4, $5, true, NOW())
       RETURNING id`,
      [
        '1.0.0',
        'Privacy Policy (English)',
        `<h2>Privacy Policy</h2>
<p>Welcome to our service</p>
<p>&nbsp;</p>
<p>Information we collect:</p>
<ul>
<li>Full Name</li>
<li>ID/Passport Number</li>
<li>Address</li>
<li>Phone Number</li>
<li>Email</li>
</ul>
<p>&nbsp;</p>
<p>We will keep your information secure</p>`,
        'en-US',
        'customer'
      ]
    );
    console.log(`‚úÖ Customer English - ID: ${customerEnResult.rows[0].id}`);
    
    // Employee Thai - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö userType ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
    const employeeResult = await pool.query(
      `INSERT INTO policy_versions 
       (version, title, content, language, user_type, is_active, effective_date) 
       VALUES ($1, $2, $3, $4, $5, true, NOW())
       RETURNING id`,
      [
        '1.0.0',
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        `<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h2>
<p>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</p>
<p>&nbsp;</p>
<ul>
<li>‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</li>
<li>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</li>
<li>‡πÅ‡∏ú‡∏ô‡∏Å</li>
</ul>`,
        'th-TH',
        'employee'
      ]
    );
    console.log(`‚úÖ Employee - ID: ${employeeResult.rows[0].id}`);
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:');
    const check = await pool.query(`
      SELECT id, user_type, language, title 
      FROM policy_versions 
      ORDER BY user_type, language
    `);
    
    check.rows.forEach(p => {
      console.log(`[${p.id}] ${p.user_type} | ${p.language} | ${p.title}`);
    });
    
    console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\nüìå ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('==============');
    console.log('1. Customer:');
    console.log('   - ‡πÄ‡∏Ç‡πâ‡∏≤ http://localhost:3003/consent/select-language');
    console.log('   - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" ‚Üí ‡πÅ‡∏™‡∏î‡∏á "‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)"');
    console.log('   - ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "English" ‚Üí ‡πÅ‡∏™‡∏î‡∏á "Privacy Policy (English)"');
    console.log('');
    console.log('2. Employee:');
    console.log('   - ‡πÄ‡∏Ç‡πâ‡∏≤ http://localhost:3003/consent/employee?lang=th');
    console.log('   - ‡πÅ‡∏™‡∏î‡∏á "‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô"');
    console.log('');
    console.log('‚ö†Ô∏è ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô:');
    console.log('   ‡πÉ‡∏´‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤ /admin/create-policy');
    console.log('   ‡πÇ‡∏î‡∏¢‡∏£‡∏∞‡∏ö‡∏∏ userType ‡πÅ‡∏•‡∏∞ language ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

fixCustomerFlow();
