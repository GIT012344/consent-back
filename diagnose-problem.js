const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function diagnoseProblem() {
  try {
    console.log('üîç ‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡∏õ‡∏±‡∏ç‡∏´‡∏≤...\n');
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('üìã 1. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log('========================');
    const dbData = await pool.query(`
      SELECT id, version, user_type, language, title, 
             LEFT(content, 100) as content_preview
      FROM policy_versions
      ORDER BY id DESC
    `);
    
    dbData.rows.forEach(p => {
      console.log(`\n[ID:${p.id}] Version:${p.version}`);
      console.log(`  UserType: "${p.user_type}"`);
      console.log(`  Language: ${p.language}`);
      console.log(`  Title: ${p.title}`);
      console.log(`  Content: ${p.content_preview}...`);
    });
    
    // 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API response
    console.log('\nüìã 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API /api/simple-policy:');
    console.log('====================================');
    try {
      const apiRes = await axios.get('http://localhost:3000/api/simple-policy');
      if (apiRes.data.success && apiRes.data.data) {
        console.log(`‡∏û‡∏ö ${apiRes.data.data.length} policies ‡∏à‡∏≤‡∏Å API`);
        apiRes.data.data.forEach(p => {
          console.log(`  [${p.id}] userType:"${p.user_type}" | ${p.language} | ${p.title}`);
        });
      }
    } catch (e) {
      console.log('‚ùå API Error:', e.message);
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤
    console.log('\nüîç 3. ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏õ‡∏±‡∏ç‡∏´‡∏≤:');
    console.log('====================');
    
    // ‡∏ô‡∏±‡∏ö userType
    const userTypeCounts = {};
    dbData.rows.forEach(p => {
      userTypeCounts[p.user_type] = (userTypeCounts[p.user_type] || 0) + 1;
    });
    
    console.log('UserType ‡∏ó‡∏µ‡πà‡∏û‡∏ö:');
    Object.entries(userTypeCounts).forEach(([type, count]) => {
      console.log(`  ${type}: ${count} policies`);
    });
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô customer ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allCustomer = dbData.rows.every(p => p.user_type === 'customer');
    if (allCustomer) {
      console.log('\n‚ùå ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ‡∏ó‡∏∏‡∏Å policy ‡πÄ‡∏õ‡πá‡∏ô customer ‡∏´‡∏°‡∏î!');
      console.log('   ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏: ‡∏ï‡∏≠‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡πÉ‡∏´‡∏°‡πà userType ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
    }
    
    // 4. ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ
    console.log('\nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
    console.log('=============');
    console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤ /admin/create-policy ‡∏ß‡πà‡∏≤‡∏™‡πà‡∏á userType ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    console.log('2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö backend API ‡∏ß‡πà‡∏≤‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å userType ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    console.log('3. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç userType ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

diagnoseProblem();
