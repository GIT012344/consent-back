const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function checkActualContent() {
  const client = await pool.connect();
  
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n');
    console.log('='.repeat(80));
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ policy
    const policies = await client.query(`
      SELECT id, user_type, language, title, content, 
             version, is_active, created_at, updated_at
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    if (policies.rows.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö policy ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!');
      return;
    }
    
    console.log(`‡∏û‡∏ö ${policies.rows.length} policies:\n`);
    
    policies.rows.forEach((p, index) => {
      console.log(`${index + 1}. Policy ID: ${p.id}`);
      console.log(`   User Type: ${p.user_type}`);
      console.log(`   Language: ${p.language}`);
      console.log(`   Title: "${p.title}"`);
      console.log(`   Version: ${p.version}`);
      console.log(`   Active: ${p.is_active ? '‚úÖ' : '‚ùå'}`);
      console.log(`   Created: ${new Date(p.created_at).toLocaleString('th-TH')}`);
      console.log(`   Updated: ${p.updated_at ? new Date(p.updated_at).toLocaleString('th-TH') : 'Never'}`);
      console.log(`   Content (Full):`);
      console.log('   ' + '-'.repeat(60));
      console.log(`   ${p.content}`);
      console.log('   ' + '-'.repeat(60));
      console.log('');
    });
    
    console.log('='.repeat(80));
    console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ:');
    console.log('‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    console.log('‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤:');
    console.log('1. ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£ override ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô');
    console.log('2. ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    console.log('3. ‡∏≠‡∏≤‡∏à‡∏°‡∏µ bug ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

checkActualContent();
