const { Pool } = require('pg');
const axios = require('axios');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function checkUserPolicies() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Policies ‡∏ó‡∏µ‡πà USER ‡∏™‡∏£‡πâ‡∏≤‡∏á...\n');
    
    // 1. ‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('üìã Policies ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log('=====================================');
    const allPolicies = await pool.query(`
      SELECT id, user_type, language, title, version, is_active,
             content
      FROM policy_versions
      ORDER BY id DESC
    `);
    
    if (allPolicies.rows.length === 0) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ policies ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!');
      console.log('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á policy ‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤ /admin/create-policy');
    } else {
      allPolicies.rows.forEach(p => {
        console.log(`\n[ID: ${p.id}]`);
        console.log(`UserType: ${p.user_type}`);
        console.log(`Language: ${p.language}`);
        console.log(`Title: ${p.title}`);
        console.log(`Active: ${p.is_active}`);
        console.log(`Content (first 200 chars): ${p.content.substring(0, 200)}...`);
        console.log('---');
      });
    }
    
    // 2. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö customer Thai
    console.log('\nüåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Customer Thai:');
    console.log('============================');
    try {
      const res = await axios.get(
        'http://localhost:3000/api/simple-policy/active?userType=customer&language=th-TH'
      );
      if (res.data.success && res.data.data) {
        console.log('‚úÖ ‡∏û‡∏ö Policy:');
        console.log(`   ID: ${res.data.data.id}`);
        console.log(`   Title: ${res.data.data.title}`);
        console.log(`   Content: ${res.data.data.content.substring(0, 200)}...`);
      } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö policy');
      }
    } catch (e) {
      console.log('‚ùå API Error:', e.message);
    }
    
    // 3. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö customer English
    console.log('\nüåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API Customer English:');
    console.log('===============================');
    try {
      const res = await axios.get(
        'http://localhost:3000/api/simple-policy/active?userType=customer&language=en-US'
      );
      if (res.data.success && res.data.data) {
        console.log('‚úÖ ‡∏û‡∏ö Policy:');
        console.log(`   ID: ${res.data.data.id}`);
        console.log(`   Title: ${res.data.data.title}`);
        console.log(`   Content: ${res.data.data.content.substring(0, 200)}...`);
      } else {
        console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö policy');
      }
    } catch (e) {
      console.log('‚ùå API Error:', e.message);
    }
    
    // 4. ‡∏™‡∏£‡∏∏‡∏õ
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ:');
    console.log('========');
    const customerPolicies = allPolicies.rows.filter(p => p.user_type === 'customer');
    console.log(`Customer policies: ${customerPolicies.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    customerPolicies.forEach(p => {
      console.log(`   - ${p.language}: "${p.title}"`);
    });
    
    const otherPolicies = allPolicies.rows.filter(p => p.user_type !== 'customer');
    console.log(`\nOther userType policies: ${otherPolicies.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
    otherPolicies.forEach(p => {
      console.log(`   - ${p.user_type} (${p.language}): "${p.title}"`);
    });
    
    console.log('\n‚ö†Ô∏è ‡∏´‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á:');
    console.log('1. ‡∏•‡∏ö policies ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
    console.log('2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô /admin/create-policy');
    console.log('3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ userType ‡πÅ‡∏•‡∏∞ language ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

checkUserPolicies();
