const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function fixContentSaveDisplay() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏î‡∏π‡∏ß‡πà‡∏≤ language format ‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
    console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Language Format:\n');
    const langCheck = await client.query(`
      SELECT DISTINCT language, COUNT(*) as count
      FROM policy_versions
      WHERE is_active = true
      GROUP BY language
    `);
    
    langCheck.rows.forEach(l => {
      console.log(`   Language: "${l.language}" ‡∏°‡∏µ ${l.count} policies`);
    });
    
    // 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç language format ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
    console.log('\n2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Language Format:\n');
    
    // ‡πÅ‡∏õ‡∏•‡∏á th-TH ‡πÄ‡∏õ‡πá‡∏ô th
    await client.query(`
      UPDATE policy_versions 
      SET language = 'th'
      WHERE language = 'th-TH' OR language = '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢'
    `);
    console.log('   ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á th-TH/‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‚Üí th');
    
    // ‡πÅ‡∏õ‡∏•‡∏á en-US ‡πÄ‡∏õ‡πá‡∏ô en
    await client.query(`
      UPDATE policy_versions 
      SET language = 'en'
      WHERE language = 'en-US' OR language = 'English'
    `);
    console.log('   ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á en-US/English ‚Üí en');
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö user_type format
    console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö User Type:\n');
    const userTypeCheck = await client.query(`
      SELECT DISTINCT user_type, COUNT(*) as count
      FROM policy_versions
      WHERE is_active = true
      GROUP BY user_type
    `);
    
    userTypeCheck.rows.forEach(u => {
      console.log(`   User Type: "${u.user_type}" ‡∏°‡∏µ ${u.count} policies`);
    });
    
    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç user_type ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô lowercase
    await client.query(`
      UPDATE policy_versions 
      SET user_type = LOWER(user_type)
    `);
    console.log('   ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á user_type ‡πÄ‡∏õ‡πá‡∏ô lowercase');
    
    // 4. ‡∏î‡∏π policies ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log('\n4. Policies ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:\n');
    const policies = await client.query(`
      SELECT id, user_type, language, title, 
             LEFT(content, 100) as content_preview
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    policies.rows.forEach(p => {
      console.log(`   ${p.user_type}/${p.language}: "${p.title}"`);
      console.log(`   Content: ${p.content_preview}...`);
      console.log('');
    });
    
    // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó policy ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
    console.log('5. ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó Policy ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ policy ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö customer/th ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const checkCustomerTh = await client.query(`
      SELECT id FROM policy_versions 
      WHERE user_type = 'customer' AND language = 'th' AND is_active = true
      LIMIT 1
    `);
    
    if (checkCustomerTh.rows.length > 0) {
      // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
      await client.query(`
        UPDATE policy_versions 
        SET content = $1, title = $2, updated_at = NOW()
        WHERE id = $3
      `, [
        '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ consent ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡πà‡∏≤‡∏ô...</p><p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà Admin ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Create Policy</p>',
        '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
        checkCustomerTh.rows[0].id
      ]);
      console.log('   ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó customer/th policy');
    } else {
      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
      await client.query(`
        INSERT INTO policy_versions (
          title, user_type, language, version, content, is_active
        ) VALUES (
          '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
          'customer',
          'th',
          '1.0.0',
          '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤ consent ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡πà‡∏≤‡∏ô...</p><p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà Admin ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Create Policy</p>',
          true
        )
      `);
      console.log('   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á customer/th policy ‡πÉ‡∏´‡∏°‡πà');
    }
    
    console.log('\n' + '='.repeat(80));
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!\n');
    console.log('üìù ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
    console.log('1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: http://localhost:5000/admin/create-policy');
    console.log('2. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log('   - ‡∏†‡∏≤‡∏©‡∏≤: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢" ‡∏´‡∏£‡∏∑‡∏≠ "th-TH"');
    console.log('   - User Type: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤" ‡∏´‡∏£‡∏∑‡∏≠ "customer"');
    console.log('   - Title: ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß');
    console.log('   - Content: ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á');
    console.log('3. ‡∏Å‡∏î "‡∏™‡∏£‡πâ‡∏≤‡∏á Policy"');
    console.log('\nüîó ‡∏ó‡∏î‡∏™‡∏≠‡∏ö:');
    console.log('http://localhost:5000/consent/customer?lang=th');
    console.log('‚Üí ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¥‡∏°‡∏û‡πå‡πÑ‡∏ß‡πâ');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

fixContentSaveDisplay();
