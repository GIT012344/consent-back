const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function checkAndFixPolicies() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Policies...\n');
    
    // 1. ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    console.log('üìã Policies ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:');
    const current = await pool.query(`
      SELECT id, user_type, language, title, version
      FROM policy_versions
      ORDER BY version
    `);
    
    current.rows.forEach(p => {
      console.log(`[${p.version}] userType: ${p.user_type} | ${p.language} | ${p.title}`);
    });
    
    // 2. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç userType ‡∏ï‡∏≤‡∏° version
    console.log('\nüîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç userType:');
    
    // 001 = customer Thai
    await pool.query(
      "UPDATE policy_versions SET user_type = 'customer' WHERE version = '001'"
    );
    console.log("‚úÖ 001 -> customer");
    
    // 002 = customer English
    await pool.query(
      "UPDATE policy_versions SET user_type = 'customer' WHERE version = '002'"
    );
    console.log("‚úÖ 002 -> customer");
    
    // 003 = employee Thai
    await pool.query(
      "UPDATE policy_versions SET user_type = 'employee' WHERE version = '003'"
    );
    console.log("‚úÖ 003 -> employee");
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\nüìä ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
    const fixed = await pool.query(`
      SELECT id, user_type, language, title, version
      FROM policy_versions
      ORDER BY version
    `);
    
    fixed.rows.forEach(p => {
      let link = '';
      if (p.user_type === 'customer') {
        link = '/consent/select-language';
      } else {
        const lang = p.language === 'th-TH' ? 'th' : 'en';
        link = `/consent/${p.user_type}?lang=${lang}`;
      }
      console.log(`[${p.version}] ${p.user_type} | ${p.language} | Link: ${link}`);
    });
    
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\nüìå ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:');
    console.log('001 (customer Thai): /consent/select-language');
    console.log('002 (customer English): /consent/select-language');
    console.log('003 (employee Thai): /consent/employee?lang=th');
    console.log('\n‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤ Policy Management ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

checkAndFixPolicies();
