const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function finalFixPolicyTitles() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Policy Title ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö records ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô Privacy Policy
    console.log('1. Records ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á Privacy Policy:\n');
    const checkRecords = await client.query(`
      SELECT id, name_surname, user_type, policy_title, consent_language, consent_version
      FROM consent_records
      WHERE policy_title = 'Privacy Policy'
      ORDER BY created_date DESC
    `);
    
    console.log(`‡∏û‡∏ö ${checkRecords.rows.length} records ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç`);
    checkRecords.rows.forEach(r => {
      console.log(`   ID ${r.id}: ${r.name_surname} (${r.user_type}/${r.consent_language}) = "${r.policy_title}"`);
    });
    
    // 2. ‡∏î‡∏π policy versions ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log('\n2. Policy Versions ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:\n');
    const policies = await client.query(`
      SELECT user_type, language, title, version
      FROM policy_versions
      WHERE is_active = true
      ORDER BY user_type, language
    `);
    
    policies.rows.forEach(p => {
      console.log(`   ${p.user_type}/${p.language}: "${p.title}" (v${p.version})`);
    });
    
    // 3. Force update ‡∏ó‡∏∏‡∏Å record ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Privacy Policy
    console.log('\n3. Force Update Records:\n');
    
    // Update ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á based on user_type ‡πÅ‡∏•‡∏∞ language
    const updates = [
      { user_type: '‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°', language: 'th', title: '‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå' },
      { user_type: 'customer', language: 'th', title: '001' },
      { user_type: 'customer', language: 'en', title: '002' },
      { user_type: 'employee', language: 'th', title: '003' }
    ];
    
    for (const update of updates) {
      const result = await client.query(`
        UPDATE consent_records
        SET policy_title = $1
        WHERE user_type = $2
        AND consent_language = $3
        AND (policy_title = 'Privacy Policy' OR policy_title IS NULL)
        RETURNING id, name_surname
      `, [update.title, update.user_type, update.language]);
      
      if (result.rowCount > 0) {
        console.log(`‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó ${result.rowCount} records: ${update.user_type}/${update.language} ‚Üí "${update.title}"`);
      }
    }
    
    // 4. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    console.log('\n4. ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:\n');
    const final = await client.query(`
      SELECT id, name_surname, user_type, policy_title, consent_language
      FROM consent_records
      WHERE is_active = true
      ORDER BY created_date DESC
      LIMIT 10
    `);
    
    final.rows.forEach(r => {
      console.log(`ID ${r.id}: ${r.name_surname}`);
      console.log(`   User Type: ${r.user_type}`);
      console.log(`   Language: ${r.consent_language}`);
      console.log(`   Policy Title: "${r.policy_title}"`);
      console.log('');
    });
    
    console.log('='.repeat(80));
    console.log('\n‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!');
    console.log('Policy Title ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:');
    console.log('- ‡∏ù‡∏∂‡∏Å‡∏≠‡∏ö‡∏£‡∏°/th ‚Üí "‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á‡πÅ‡∏û‡∏ó‡∏¢‡πå"');
    console.log('- customer/th ‚Üí "001"');
    console.log('- customer/en ‚Üí "002"');
    console.log('- employee/th ‚Üí "003"');
    console.log('- ‡πÑ‡∏°‡πà‡∏°‡∏µ "Privacy Policy" ‡πÅ‡∏•‡πâ‡∏ß');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

finalFixPolicyTitles();
