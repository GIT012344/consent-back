const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  database: 'consent',
  user: 'postgres',
  password: '4321'
});

async function fixUserTypeIssue() {
  try {
    console.log('üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤ UserType...\n');
    
    // 1. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    await pool.query('DELETE FROM policy_versions');
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤');
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á 100%
    const policies = [
      // Customer Thai
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</p>',
        language: 'th-TH',
        user_type: 'customer'  // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô customer
      },
      // Customer English
      {
        version: '1.0.0',
        title: 'Customer Policy (English)',
        content: '<h2>Customer Policy</h2><p>Content for customers in English</p>',
        language: 'en-US',
        user_type: 'customer'  // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô customer
      },
      // Employee
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô</p>',
        language: 'th-TH',
        user_type: 'employee'  // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô employee ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà customer!
      },
      // Partner
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏±‡∏ô‡∏ò‡∏°‡∏¥‡∏ï‡∏£</p>',
        language: 'th-TH',
        user_type: 'partner'  // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô partner ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà customer!
      },
      // Vendor
      {
        version: '1.0.0',
        title: '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢',
        content: '<h2>‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢</h2><p>‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢</p>',
        language: 'th-TH',
        user_type: 'vendor'  // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô vendor ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà customer!
      }
    ];
    
    console.log('\nüìù ‡∏™‡∏£‡πâ‡∏≤‡∏á Policies ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á:');
    for (const policy of policies) {
      const result = await pool.query(
        `INSERT INTO policy_versions 
         (version, title, content, language, user_type, is_active, effective_date) 
         VALUES ($1, $2, $3, $4, $5, true, NOW())
         RETURNING id, user_type`,
        [policy.version, policy.title, policy.content, policy.language, policy.user_type]
      );
      
      const inserted = result.rows[0];
      console.log(`‚úÖ [${inserted.id}] UserType: ${inserted.user_type} | ${policy.title}`);
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ userType ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      if (inserted.user_type !== policy.user_type) {
        console.log(`   ‚ùå ERROR: UserType ‡∏ú‡∏¥‡∏î! ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô ${policy.user_type} ‡πÅ‡∏ï‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô ${inserted.user_type}`);
      }
    }
    
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
    console.log('\nüìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:');
    const check = await pool.query(`
      SELECT id, user_type, language, title 
      FROM policy_versions 
      ORDER BY 
        CASE user_type 
          WHEN 'customer' THEN 1
          WHEN 'employee' THEN 2
          WHEN 'partner' THEN 3
          WHEN 'vendor' THEN 4
          ELSE 5
        END,
        language
    `);
    
    console.log('\nPolicies ‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');
    console.log('ID | UserType  | Language | Title');
    console.log('---|-----------|----------|------');
    
    const userTypeCounts = {};
    check.rows.forEach(p => {
      console.log(`${p.id}  | ${p.user_type.padEnd(9)} | ${p.language} | ${p.title}`);
      userTypeCounts[p.user_type] = (userTypeCounts[p.user_type] || 0) + 1;
    });
    
    console.log('\nüìä ‡∏™‡∏£‡∏∏‡∏õ UserTypes:');
    Object.entries(userTypeCounts).forEach(([type, count]) => {
      console.log(`   ${type}: ${count} policies`);
    });
    
    console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('\n‚ö†Ô∏è ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏¥‡∏î:');
    console.log('1. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó Backend (Ctrl+C ‡πÅ‡∏•‡πâ‡∏ß node server.js)');
    console.log('2. Clear cache browser (Ctrl+Shift+R)');
    console.log('3. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤ Policy Management');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await pool.end();
  }
}

fixUserTypeIssue();
