const { Pool } = require('pg');

const pool = new Pool({
  host: 'localhost',
  port: 5432,
  user: 'postgres',
  password: '4321',
  database: 'consent'
});

async function addPolicyTitleColumn() {
  const client = await pool.connect();
  
  try {
    console.log('üîß ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á consent_records\n');
    console.log('='.repeat(80));
    
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    const checkColumn = await client.query(`
      SELECT column_name 
      FROM information_schema.columns 
      WHERE table_name = 'consent_records' 
      AND column_name = 'policy_title'
    `);
    
    if (checkColumn.rows.length === 0) {
      // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title
      console.log('1. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title...');
      await client.query(`
        ALTER TABLE consent_records 
        ADD COLUMN IF NOT EXISTS policy_title VARCHAR(500)
      `);
      console.log('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title ‡πÅ‡∏•‡πâ‡∏ß');
    } else {
      console.log('‚úÖ ‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå policy_title ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
    }
    
    // 3. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó policy_title ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö records ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log('\n2. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó policy_title ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö records ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà...');
    
    // Join ‡∏Å‡∏±‡∏ö policy_versions ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á title
    const updateQuery = `
      UPDATE consent_records cr
      SET policy_title = pv.title
      FROM policy_versions pv
      WHERE cr.consent_version = pv.version
      AND cr.user_type = pv.user_type
      AND cr.consent_language = pv.language
      AND cr.policy_title IS NULL
      AND pv.is_active = true
    `;
    
    const updateResult = await client.query(updateQuery);
    console.log(`‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó ${updateResult.rowCount} records`);
    
    // 4. ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á records
    console.log('\n3. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Consent Records:\n');
    const sample = await client.query(`
      SELECT id, name_surname, user_type, policy_title, consent_version
      FROM consent_records
      WHERE is_active = true
      ORDER BY created_date DESC
      LIMIT 5
    `);
    
    if (sample.rows.length > 0) {
      sample.rows.forEach(r => {
        console.log(`ID ${r.id}: ${r.name_surname}`);
        console.log(`   User Type: ${r.user_type}`);
        console.log(`   Policy Title: ${r.policy_title || 'N/A'}`);
        console.log(`   Version: ${r.consent_version}`);
        console.log('');
      });
    } else {
      console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö consent records');
    }
    
    console.log('='.repeat(80));
    console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!');
    console.log('\n‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏ô‡πâ‡∏≤ Consent Records Management ‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á:');
    console.log('- ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå "‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠" ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á policy title');
    console.log('- Export CSV ‡∏à‡∏∞‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå Title ‡∏î‡πâ‡∏ß‡∏¢');
    console.log('\nConsent ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å policy title ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥');
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

addPolicyTitleColumn();
